{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "Domain.v1alpha1.schema.json",
  "$comment": "Based, with some modification & customization, on https://json.schemastore.org/catalog-info.json.",
  "description": "The Domain entity type is special. We use it to define our \"ideal architectural state\", not necessarily our \"current state\". As such no repository outside of this one should define these.\r\rSystem entities that make up our \"current state\" are connected to Domain entities via the `spec.domain` attribute.\r\rOnce a Component, Resource, or API is created to implement a Domain, a System entity should be created.\r\rMore @ https://techhub.mktp.io/docs/default/system/techhub/catalog-info-entities/domain/ .",
  "examples": [
    {
      "apiVersion": "backstage.io/v1alpha1",
      "kind": "Domain",
      "metadata": {
        "name": "front-end-tooling",
        "description": "Tools and components to unify and streamline front-end development, browser performance, and consistency.",
        "needs": {
          "print-vendor": "to send printed materials",
          "telephony": "to notify when there are calls in the queue"
        },
        "annotations": {
          "mktp.io/notes": "Tools and components to unify and streamline front-end development.",
          "mktp.io/owners": "Any additional info about ownership"
        }
      },
      "spec": {
        "owner": "group:default/customization"
      }
    }
  ],
  "allOf": [
    {
      "$ref": "Entity.schema.json"
    },
    {
      "type": "object",
      "required": [
        "spec",
        "metadata"
      ],
      "properties": {
        "kind": {
          "enum": [
            "Domain"
          ]
        },
        "metadata": {
          "type": "object",
          "required": [
            "annotations"
          ],
          "properties": {
            "needs": {
              "type": "object",
              "description": "A collection of key-value pairs of other domains and what this domain needs from them. \nKeys be up to 63 alphanumeric characters including '[-_.]'. Values are a string and markdown is supported.",
              "propertyNames": {
                "minLength": 1,
                "maxLength": 63,
                "pattern": "^([a-z0-9A-Z\\-\\_\\.]+)$",
                "$comment": "Expected Pattern: '[a-z0-9A-Z-_.]'",
                "examples": [
                  "print-vendor",
                  "telephony"
                ]
              },
              "additionalProperties": {
                "type": "string",
                "minLength": 1,
                "description": "Each entry should have a Domain key which represents the other domain that is needed and a string value that describes what is needed from the other domain.  Markdown is supported.\nThe value should be worded to fill in a sentence like:  'This Domain needs the Other Domain to ___.'",
                "examples": [
                  {
                    "print-vendor": "to send printed materials",
                    "telephony": "to notify when there are calls in the queue"
                  }
                ]
              },
              "examples": [
                {
                  "print-vendor": "to send printed materials",
                  "telephony": "to notify when there are calls in the queue"
                }
              ],
              "$comment": "Needs is a map of key-value pairs where the key is the string name of the domain that is needed and the value is a string that describes what is needed from that domain.  The key cannot exceed 63 characters and can only contain alphanumeric values including '-', '_', and '.'.  The value is a string and markdown is supported."
            },
            "annotations": {
              "type": "object",
              "description": "A collection of key-value pairs of non-identifying auxiliary information attached to the entity.",
              "required": [
                "mktp.io/notes"
              ],
              "properties": {
                "mktp.io/notes": {
                  "type": "string",
                  "description": "Long form notes about the responsibilities, scope, and other important details about the bounded context. Markdown is supported.",
                  "examples": [
                    "Tools and components to unify and streamline front-end development.",
                    "\nThe source of truth for allocating time to handle customer appts."
                  ],
                  "minLength": 1
                },
                "mktp.io/owners": {
                  "type": "string",
                  "description": "Information regarding Domain ownership.  Generally used only when ownership is unsettled.  Markdown is supported.",
                  "examples": [
                    "## Unsettled Ownership\nOwnership is NOT settled. The apps that this context should own are currently stewarded by many teams."
                  ],
                  "minLength": 1
                }
              },
              "additionalProperties": true,
              "patternProperties": {
                "^.+$": {
                  "type": "string"
                }
              },
              "$comment": "Annotations is a map of key-value pairs containing auxiliary information attached to the entity.  For Domains, the 'mktp.io/notes' annotation is required and any other annotations are optional."
            }
          },
          "$comment": "Metadata is required and should contain the required annotations property and an optional needs property."
        },
        "spec": {
          "type": "object",
          "required": ["type", "owner"],
          "properties": {
            "type": {
              "type": "string",
              "description": "The type of Domain.\nMore info @ https://techhub.mktp.io/docs/default/system/techhub/catalog-info-entities/domain .",
              "enum": ["Core", "External", "Generic", "Supporting"]
            },
            "owner": {
              "type": "string",
              "description": "An entity reference to the owner of the Domain.\r\rThis is required because - unlike APIs, Components, Systems and Resources - we load all Domains centrally from the im-practices/techhub repository as representations of our desired future-state bounded context map. So, the owner of a Domain cannot be determined via a host repository's CODEOWNERS file.",
              "pattern": "\\b(?:group|user)\\b:(?:\\bdefault\\/\\b)?.+",
              "$comment": "Expected Pattern: '<kind>:[<optional-namespace>/]<entity-name>'",
              "examples": [
                "group:default/customization",
                "group:customization",
                "user:RyanHauert",
                "user:default/RyanHauert"
              ]
            }
          },
          "$comment": "It should contain both owner and type properties."
        }
      }
    }
  ]
}
