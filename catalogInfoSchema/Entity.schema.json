{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "Entity.schema.json",
  "$comment": "Based, with some modification & customization, on https://json.schemastore.org/catalog-info.json.",
  "description": "The parts of the format that's common to all versions/kinds of entity. More info @ https://techhub.mktp.io/docs/default/system/techhub/catalog-info-entities/common/",
  "type": "object",
  "required": [
    "apiVersion",
    "kind",
    "metadata"
  ],
  "additionalProperties": false,
  "properties": {
    "apiVersion": {
      "type": "string",
      "description": "The version of specification format for this particular entity that this is written against.",
      "minLength": 1,
      "enum": [
        "backstage.io/v1alpha1",
        "backstage.io/v1beta1"
      ]
    },
    "kind": {
      "type": "string",
      "description": "The high level entity type being described.",
      "minLength": 1,
      "enum": [
        "API",
        "Component",
        "Domain",
        "Resource",
        "System"
      ]
    },
    "metadata": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "EntityMeta",
      "description": "Metadata fields common to all versions/kinds of entity.",
      "examples": [
        {
          "name": "file-relocator",
          "title": "File Relocator",
          "annotations": {
            "sumologic-source-category": "file-relocator-<env>"
          }
        }
      ],
      "type": "object",
      "required": [
        "name"
      ],
      "additionalProperties": true,
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the entity. Must be unique within the catalog for the given kind.",
          "examples": [
            "front-end-tooling"
          ],
          "minLength": 1
        },
        "title": {
          "type": "string",
          "description": "A display name of the entity, to be presented in user interfaces instead of the name property, when available.",
          "examples": [
            "Front-End Tooling"
          ],
          "minLength": 1
        },
        "description": {
          "type": "string",
          "description": "A short (typically relatively few words, on one line) description of the entity."
        },
        "annotations": {
          "type": "object",
          "description": "Key/value pairs of non-identifying auxiliary information attached to the entity.",
          "additionalProperties": true,
          "patternProperties": {
            "^.+$": {
              "type": "string"
            }
          }
        },
        "links": {
          "type": "array",
          "description": "A list of external hyperlinks related to the entity. Links can provide additional contextual information that may be located outside of Backstage itself. For example, an admin dashboard or external CMS page.",
          "items": {
            "type": "object",
            "required": [
              "url"
            ],
            "properties": {
              "url": {
                "type": "string",
                "description": "A url in a standard uri format.",
                "examples": [
                  "https://wtw-im.github.io/es-components/"
                ],
                "minLength": 1
              },
              "title": {
                "type": "string",
                "description": "A user friendly display name for the link.",
                "examples": [
                  "es-components playground"
                ],
                "minLength": 1
              },
              "icon": {
                "type": "string",
                "description": "A key representing a visual icon to be displayed in the UI. There are a few out of the box you can use. You can find them at https://github.com/backstage/backstage/blob/master/packages/app-defaults/src/defaults/icons.tsx",
                "enum": [
                  "catalog",
                  "scaffolder",
                  "techdocs",
                  "search",
                  "chat",
                  "dashboard",
                  "docs",
                  "email",
                  "github",
                  "group",
                  "help",
                  "kind:api",
                  "kind:component",
                  "kind:domain",
                  "kind:group",
                  "kind:location",
                  "kind:system",
                  "kind:user",
                  "kind:resource",
                  "user",
                  "warning"
                ],
                "minLength": 1
              }
            }
          }
        }
      }
    },
    "spec": {
      "type": "object",
      "description": "The specification data describing the entity itself."
    },
    "validationMetadata": {
      "type": "object",
      "description": "Used during automated validation, not to be used in catalog-info.yml files.  Contains the information about the original yaml file so errors can be attributed to the correct lines."
    }
  }
}