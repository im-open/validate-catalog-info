{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "Component.v1alpha1.schema.json",
  "$comment": "Based, with some modification & customization, on https://json.schemastore.org/catalog-info.json.",
  "description": "A Component describes a software component. It is typically intimately linked to the source code that constitutes the component, and should be what a developer may regard a \"unit of software\", usually with a distinct deployable or linkable artifact. More info @ https://techhub.mktp.io/docs/default/system/techhub/catalog-info-entities/component/.",
  "examples": [
    {
      "apiVersion": "backstage.io/v1alpha1",
      "kind": "Component",
      "metadata": {
        "name": "appointment-manager-mfe",
        "description": "Front end for setting up appointments"
      },
      "spec": {
        "type": "mfe",
        "lifecycle": "maintaining",
        "owner": "group:default/ce2"
      }
    }
  ],
  "allOf": [
    {
      "$ref": "Entity.schema.json"
    },
    {
      "type": "object",
      "required": ["spec"],
      "properties": {
        "apiVersion": {
          "enum": ["backstage.io/v1alpha1", "backstage.io/v1beta1"]
        },
        "kind": {
          "enum": ["Component"]
        },
        "metadata": {
          "type": "object",
          "properties": {
            "deployment-environments": {
              "type": "array",
              "description": "A list of environments that this Component deploys to. More info @ https://techhub.mktp.io/docs/default/system/techhub/im-github-deployments/#techhub-catalog-github-deployments .",
              "uniqueItems": true,
              "minItems": 1,
              "items": {
                  "type": "string",
                  "minLength": 1,
                  "examples": [
                      "Dev",
                      "QA",
                      "Stage",
                      "Prod",
                      "UAT"
                  ]
              }
            }
          }
        },
        "spec": {
          "type": "object",
          "required": ["type", "lifecycle", "system"],
          "properties": {
            "type": {
              "type": "string",
              "description": "The lifecycle state of the component. More info @ https://techhub.mktp.io/docs/default/system/techhub/catalog-info-entities/component/#property-value-restrictions",
              "examples": ["service", "library", "documentation", "tool", "mfe", "site"],
              "enum": ["service", "library", "documentation", "tool", "mfe", "site"],
              "minLength": 1
            },
            "lifecycle": {
              "type": "string",
              "description": "The lifecycle state of the component. More info @ https://techhub.mktp.io/docs/default/system/techhub/catalog-info-entities/component/#property-value-restrictions",
              "examples": ["experimenting", "developing", "maintaining", "deprecating", "obsolete"],
              "enum": ["experimenting", "developing", "maintaining", "deprecating", "obsolete"],
              "minLength": 1
            },
            "owner": {
              "type": "string",
              "description": "An entity reference to the owner of the Component.\nThis should usually not be specified because the owner will be automatically determined via this repository's CODEOWNERS file.",
              "minLength": 1,
              "pattern": "\\b(?:group|user)\\b:(?:\\bdefault\\/\\b)?.+",
              "$comment": "Expected Pattern: '<kind>:[<optional-namespace>/]<entity-name>'",
              "examples": [
                "group:default/customization",
                "group:customization",
                "user:RyanHauert",
                "user:default/RyanHauert"
              ]
            },
            "system": {
              "type": "string",
              "description": "An entity reference to the system that the component belongs to.",
              "minLength": 1,
              "pattern": "\\b(?:system)\\b:(?:\\bdefault\\/\\b)?.+",
              "$comment": "Expected Pattern: 'system:[<optional-namespace>/]<system-name>'",
              "examples": [
                "system:default/appointment-manager",
                "system:appointment-manager"
              ]
            },
            "subcomponentOf": {
              "type": "string",
              "description": "An entity reference to another component of which the component is a part.",
              "minLength": 1,
              "pattern": "\\b(?:component)\\b:(?:\\bdefault\\/\\b)?.+",
              "$comment": "Expected Pattern: 'component:[<optional-namespace>/]<component-name>'",
              "examples": [
                "component:default/discover-mfe",
                "component:discover-mfe"
              ]
            },
            "providesApis": {
              "type": "array",
              "description": "An array of entity references to the APIs that are provided by the component.",
              "items": {
                "type": "string",
                "minLength": 1,
                "pattern": "\\b(?:api)\\b:(?:\\bdefault\\/\\b)?.+",
                "$comment": "Expected Pattern: 'api:[<optional-namespace>/]<api-name>'",
                "examples": [
                  "api:default/appointment-manager-service",
                  "api:appointment-manager-service"
                ]
              }
            },
            "consumesApis": {
              "type": "array",
              "description": "An array of entity references to the APIs that are consumed by the component.",
              "items": {
                "type": "string",
                "minLength": 1,
                "pattern": "\\b(?:api)\\b:(?:\\bdefault\\/\\b)?.+",
                "$comment": "Expected Pattern: 'api:[<optional-namespace>/]<api-name>'",
                "examples": [
                  "api:default/appointment-manager-service",
                  "api:appointment-manager-service"
                ]
              }
            },
            "dependsOn": {
              "type": "array",
              "description": "An array of entity references that the component depends on to function.",
              "items": {
                "type": "string",
                "minLength": 1,
                "pattern": "\\b(?:api|component|domain|resource|system)\\b:(?:\\bdefault\\/\\b)?.+",
                "$comment": "Expected Pattern: '<kind>:[<optional-namespace>/]<entity-name>'",
                "examples": [
                  "resource:default/launchdarkly",
                  "component:front-end-tooling-mfe"
                ]
              }
            }
          }
        }
      }
    }
  ]
}
